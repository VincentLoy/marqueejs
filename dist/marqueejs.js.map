{"version":3,"file":"marqueejs.js","sources":["../src/core/OptionsValidator.ts","../src/core/managers/AnimationManager.ts","../src/core/managers/EventManager.ts","../src/core/managers/CloneCalculator.ts","../src/core/managers/DOMManager.ts","../src/core/Marquee.ts","../src/index.ts"],"sourcesContent":["import type {\n  MarqueeOptions,\n  ContentValidationResult,\n  ContentValidationErrorType,\n  ContentValidationOptions,\n} from \"../types\";\n\nexport class OptionsValidator {\n  static readonly MAX_CLONES = 30;\n  static readonly MIN_CLONES = 0;\n  static readonly DEFAULT_MAX_LENGTH = 8500;\n\n  private static readonly FORBIDDEN_TAGS = [\n    \"script\",\n    \"style\",\n    \"iframe\",\n    \"object\",\n    \"embed\",\n    \"form\",\n    \"svg\",\n    \"input\",\n    \"button\",\n    \"meta\",\n    \"link\",\n    \"head\",\n    \"html\",\n    \"body\",\n  ];\n\n  private static readonly FORBIDDEN_ATTRIBUTES = [\n    \"onclick\",\n    \"onmouseover\",\n    \"onmouseout\",\n    \"onload\",\n    \"onerror\",\n    \"onsubmit\",\n    \"formaction\",\n    \"xlink:href\",\n    \"action\",\n    \"javascript\",\n  ];\n\n  private static readonly DEFAULT_VALIDATION_OPTIONS = {\n    maxLength: OptionsValidator.DEFAULT_MAX_LENGTH,\n    forbiddenTags: OptionsValidator.FORBIDDEN_TAGS,\n    forbiddenAttributes: OptionsValidator.FORBIDDEN_ATTRIBUTES,\n  } as const;\n\n  static validate(options: MarqueeOptions): MarqueeOptions {\n    this.validateSpeed(options.speed);\n    this.validateDirection(options.direction);\n    this.validateGap(options.gap);\n\n    // Initialize contentValidation with defaults if not provided\n    if (!options.contentValidation) {\n      options.contentValidation = this.DEFAULT_VALIDATION_OPTIONS;\n    } else {\n      options.contentValidation = {\n        maxLength: options.contentValidation.maxLength || this.DEFAULT_MAX_LENGTH,\n        forbiddenTags: [...this.FORBIDDEN_TAGS, ...(options.contentValidation.forbiddenTags || [])],\n        forbiddenAttributes: [\n          ...this.FORBIDDEN_ATTRIBUTES,\n          ...(options.contentValidation.forbiddenAttributes || []),\n        ],\n      };\n    }\n\n    // Add contentList validation\n    if (options.contentList) {\n      const validationResult = this.validateContentList(options.contentList, options);\n      if (!validationResult.isValid) {\n        console.warn(\n          \"MarqueeJS: Content list validation failed:\",\n          validationResult.errors.map((e) => e.message).join(\", \")\n        );\n        options.contentList = options.contentList.filter(\n          (_, index) => !validationResult.errors.some((e) => e.index === index)\n        );\n      }\n    }\n\n    // Handle clone count separately to return modified options\n    if (options.cloneCount !== undefined) {\n      if (options.cloneCount === \"auto\") {\n        // 'auto' est une valeur valide, ne rien faire\n      } else if (!Number.isInteger(options.cloneCount) || options.cloneCount < 0) {\n        console.warn(\n          `MarqueeJS: Requested ${options.cloneCount} clones, but minimum is ${this.MIN_CLONES}. Using ${this.MIN_CLONES} clones instead.`\n        );\n        options.cloneCount = this.MIN_CLONES;\n      } else if (typeof options.cloneCount === \"number\" && options.cloneCount > this.MAX_CLONES) {\n        console.warn(\n          `MarqueeJS: Requested ${options.cloneCount} clones, but maximum is ${this.MAX_CLONES}. Using ${this.MAX_CLONES} clones instead.`\n        );\n        options.cloneCount = this.MAX_CLONES;\n      }\n    }\n\n    // Remove separator for vertical directions\n    if ([\"up\", \"down\"].includes(options.direction || \"\") && options.separator) {\n      console.warn(\n        \"MarqueeJS: Separator is not supported for vertical directions. Separator will be ignored.\"\n      );\n      options.separator = \"\";\n    }\n\n    this.validateContainerHeight(options.containerHeight, options.direction);\n    this.validateKeepOriginalContent(options.keepOriginalContent);\n\n    return options;\n  }\n\n  public static validateContentList(\n    contentList: string[],\n    options: MarqueeOptions\n  ): ContentValidationResult {\n    const errors: {\n      type: ContentValidationErrorType;\n      message: string;\n      content?: string;\n      index?: number;\n    }[] = [];\n\n    if (!Array.isArray(contentList)) {\n      return {\n        isValid: false,\n        errors: [\n          {\n            type: \"INVALID_HTML\" as ContentValidationErrorType,\n            message: \"Content list must be an array of strings\",\n          },\n        ],\n      };\n    }\n\n    // Create a complete validation options object with all required properties\n    const validationOptions = {\n      ...this.DEFAULT_VALIDATION_OPTIONS,\n      ...options.contentValidation,\n      forbiddenTags: [...this.FORBIDDEN_TAGS, ...(options.contentValidation?.forbiddenTags || [])],\n      forbiddenAttributes: [\n        ...this.FORBIDDEN_ATTRIBUTES,\n        ...(options.contentValidation?.forbiddenAttributes || []),\n      ],\n      maxLength: options.contentValidation?.maxLength || this.DEFAULT_MAX_LENGTH,\n    };\n\n    const forbiddenTagsPattern = new RegExp(\n      `</?(?:${validationOptions.forbiddenTags.join(\"|\")})\\\\b[^>]*>`,\n      \"i\"\n    );\n    const forbiddenAttrsPattern = new RegExp(\n      validationOptions.forbiddenAttributes\n        .map((attr) => `${attr}\\\\s*=\\\\s*[\"']?[^\"']*[\"']?`)\n        .join(\"|\"),\n      \"i\"\n    );\n\n    for (let i = 0; i < contentList.length; i++) {\n      const content = contentList[i];\n\n      // Check for empty or non-string content\n      if (!content || typeof content !== \"string\") {\n        errors.push({\n          type: \"EMPTY_CONTENT\" as ContentValidationErrorType,\n          message: \"Content item must be a non-empty string\",\n          index: i,\n          content,\n        });\n        continue;\n      }\n\n      // Check for forbidden tags\n      if (forbiddenTagsPattern.test(content)) {\n        errors.push({\n          type: \"UNSAFE_TAG_DETECTED\" as ContentValidationErrorType,\n          message: \"Content contains forbidden HTML tags\",\n          index: i,\n          content: content.substring(0, 50) + \"...\",\n        });\n        continue;\n      }\n\n      // Check for forbidden attributes\n      if (forbiddenAttrsPattern.test(content)) {\n        errors.push({\n          type: \"UNSAFE_ATTRIBUTES\" as ContentValidationErrorType,\n          message: \"Content contains forbidden HTML attributes\",\n          index: i,\n          content: content.substring(0, 50) + \"...\",\n        });\n        continue;\n      }\n\n      // Check for user-defined or default length\n      if (content.length > validationOptions.maxLength) {\n        errors.push({\n          type: \"MAX_LENGTH_EXCEEDED\" as ContentValidationErrorType,\n          message: `Content item exceeds maximum length of ${validationOptions.maxLength} characters`,\n          index: i,\n          content: content.substring(0, 50) + \"...\",\n        });\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n    };\n  }\n\n  public static validateSpeed(speed: number | undefined): void {\n    if (speed !== undefined && (typeof speed !== \"number\" || speed <= 0)) {\n      throw new Error(\"MarqueeJS: Speed must be a positive number\");\n    }\n  }\n\n  public static validateDirection(direction: string | undefined): void {\n    const validDirections = [\"left\", \"right\", \"up\", \"down\"];\n    if (direction && !validDirections.includes(direction)) {\n      throw new Error(`MarqueeJS: Direction must be one of: ${validDirections.join(\", \")}`);\n    }\n  }\n\n  public static validateGap(gap: number | undefined): void {\n    if (gap !== undefined && (typeof gap !== \"number\" || gap < 0)) {\n      throw new Error(\"MarqueeJS: Gap must be a non-negative number\");\n    }\n  }\n\n  public static validateContainerHeight(\n    containerHeight: number | undefined,\n    direction: string | undefined\n  ): void {\n    if (containerHeight !== undefined) {\n      if (typeof containerHeight !== \"number\" || containerHeight <= 0) {\n        throw new Error(\"MarqueeJS: Container height must be a positive number\");\n      }\n      if (![\"up\", \"down\"].includes(direction || \"\")) {\n        console.warn(\n          'MarqueeJS: Container height is only applicable for \"up\" and \"down\" directions. Ignoring containerHeight.'\n        );\n      }\n    }\n  }\n\n  public static validateKeepOriginalContent(keepOriginalContent: boolean | undefined): void {\n    if (keepOriginalContent !== undefined && typeof keepOriginalContent !== \"boolean\") {\n      throw new Error(\"MarqueeJS: keepOriginalContent must be a boolean\");\n    }\n  }\n\n  public static validateCloneCount(cloneCount: number | \"auto\"): void {\n    if (\n      cloneCount !== \"auto\" &&\n      (!Number.isInteger(cloneCount) || cloneCount < 0 || cloneCount > this.MAX_CLONES)\n    ) {\n      throw new Error(\n        `MarqueeJS: cloneCount must be 'auto' or an integer between ${this.MIN_CLONES} and ${this.MAX_CLONES}`\n      );\n    }\n  }\n}\n","import type { MarqueeOptions } from \"../../types\";\n\nexport class AnimationManager {\n  private wrapper: HTMLElement;\n  private options: Partial<MarqueeOptions>;\n  private animationFrame: number | null = null;\n  private lastTime: number = 0;\n  private elements: Array<{ el: HTMLElement; position: number }> = [];\n\n  constructor(wrapper: HTMLElement, options: Partial<MarqueeOptions>) {\n    this.wrapper = wrapper;\n    this.options = options;\n    this.setupElements();\n  }\n\n  private setupElements(): void {\n    const groups = Array.from(this.wrapper.children) as HTMLElement[];\n    const isHorizontal = [\"left\", \"right\"].includes(this.options.direction!);\n    let currentPosition = 0;\n\n    this.elements = groups.map((group) => {\n      // Calculate size including gap\n      const size = isHorizontal\n        ? group.offsetWidth + this.options.gap!\n        : group.offsetHeight + this.options.gap!;\n\n      // Store current position for this element\n      const position = currentPosition;\n\n      // Position element\n      group.style.position = \"absolute\";\n      group.style.top = \"0\";\n      group.style.left = \"0\";\n      group.style.transform = isHorizontal\n        ? `translate3d(${position}px, 0, 0)`\n        : `translate3d(0, ${position}px, 0)`;\n\n      // Update position for next element\n      currentPosition += size;\n\n      return {\n        el: group,\n        position,\n      };\n    });\n  }\n\n  public startAnimation(): void {\n    this.lastTime = performance.now();\n\n    const animate = (currentTime: number) => {\n      const deltaTime = currentTime - this.lastTime;\n      this.lastTime = currentTime;\n      const movement = (this.options.speed! * deltaTime) / 1000;\n\n      // Update each element's position independently\n      this.elements.forEach((item) => {\n        if ([\"left\", \"right\"].includes(this.options.direction!)) {\n          this.updateHorizontalPosition(item, movement);\n        } else {\n          this.updateVerticalPosition(item, movement);\n        }\n      });\n\n      this.animationFrame = requestAnimationFrame(animate);\n    };\n\n    this.animationFrame = requestAnimationFrame(animate);\n  }\n\n  private isPositionAvailable(newPosition: number, currentElement: HTMLElement): boolean {\n    const threshold = this.options.gap!;\n    const isHorizontal = [\"left\", \"right\"].includes(this.options.direction!);\n\n    return !this.elements.some(({ el, position }) => {\n      if (el === currentElement) return false;\n\n      if (isHorizontal) {\n        const elementWidth = el.offsetWidth;\n        return Math.abs(position - newPosition) < elementWidth + threshold;\n      } else {\n        const elementHeight = el.offsetHeight;\n        return Math.abs(position - newPosition) < elementHeight + threshold;\n      }\n    });\n  }\n\n  private updateHorizontalPosition(\n    item: { el: HTMLElement; position: number },\n    movement: number\n  ): void {\n    const containerWidth = this.wrapper.parentElement?.offsetWidth || 0;\n    const elementWidth = item.el.offsetWidth;\n\n    if (this.options.direction === \"left\") {\n      item.position -= movement;\n\n      if (item.position + elementWidth < 0) {\n        const newPosition = containerWidth;\n        // Only reset if there's space available\n        if (this.isPositionAvailable(newPosition, item.el)) {\n          item.position = newPosition;\n        }\n      }\n    } else {\n      item.position += movement;\n\n      if (item.position > containerWidth) {\n        const newPosition = -elementWidth;\n        if (this.isPositionAvailable(newPosition, item.el)) {\n          item.position = newPosition;\n        }\n      }\n    }\n\n    item.el.style.transform = `translate3d(${item.position}px, 0, 0)`;\n  }\n\n  private updateVerticalPosition(\n    item: { el: HTMLElement; position: number },\n    movement: number\n  ): void {\n    const containerHeight = this.wrapper.parentElement?.offsetHeight || 0;\n    const elementHeight = item.el.offsetHeight;\n\n    if (this.options.direction === \"up\") {\n      item.position -= movement;\n      if (item.position + elementHeight < 0) {\n        const newPosition = containerHeight;\n        if (this.isPositionAvailable(newPosition, item.el)) {\n          item.position = newPosition;\n        }\n      }\n    } else {\n      item.position += movement;\n      if (item.position > containerHeight) {\n        const newPosition = -elementHeight;\n        if (this.isPositionAvailable(newPosition, item.el)) {\n          item.position = newPosition;\n        }\n      }\n    }\n\n    item.el.style.transform = `translate3d(0, ${item.position}px, 0)`;\n  }\n\n  public stopAnimation(): void {\n    if (this.animationFrame) {\n      cancelAnimationFrame(this.animationFrame);\n      this.animationFrame = null;\n    }\n    this.lastTime = 0;\n  }\n\n  public recalculatePositions(): void {\n    // Stop current animation\n    this.stopAnimation();\n\n    // Reset and reinitialize positions\n    this.setupElements();\n\n    // Restart animation if it was running\n    this.startAnimation();\n  }\n}\n","import type { MarqueeOptions } from \"../../types\";\n\nexport class EventManager {\n  private wrapper: HTMLElement;\n  private options: Partial<MarqueeOptions>;\n  private handlers: {\n    pause: () => void;\n    resume: () => void;\n  };\n\n  constructor(\n    _element: HTMLElement,\n    wrapper: HTMLElement,\n    options: Partial<MarqueeOptions>,\n    handlers: { pause: () => void; resume: () => void }\n  ) {\n    this.wrapper = wrapper;\n    this.options = options;\n    this.handlers = handlers;\n    this.init();\n  }\n\n  private init(): void {\n    this.setupHoverEvents();\n    this.setupTouchEvents();\n    this.setupVisibilityEvents();\n  }\n\n  private setupHoverEvents(): void {\n    if (this.options.pauseOnHover) {\n      this.wrapper.addEventListener(\"mouseenter\", this.handlers.pause);\n      this.wrapper.addEventListener(\"mouseleave\", this.handlers.resume);\n    }\n  }\n\n  private setupTouchEvents(): void {\n    let touchStartX: number;\n    let touchStartY: number;\n\n    // Add passive touch start listener\n    this.wrapper.addEventListener(\n      \"touchstart\",\n      (e: TouchEvent) => {\n        touchStartX = e.touches[0].clientX;\n        touchStartY = e.touches[0].clientY;\n        this.handlers.pause();\n      },\n      { passive: true }\n    );\n\n    // Add passive touch end listener\n    this.wrapper.addEventListener(\n      \"touchend\",\n      () => {\n        this.handlers.resume();\n      },\n      { passive: true }\n    );\n\n    // Separate touch move handler that can prevent default\n    const handleTouchMove = (e: TouchEvent) => {\n      const deltaX = e.touches[0].clientX - touchStartX;\n      const deltaY = e.touches[0].clientY - touchStartY;\n\n      if (\n        Math.abs(deltaX) > Math.abs(deltaY) &&\n        [\"left\", \"right\"].includes(this.options.direction!)\n      ) {\n        e.preventDefault();\n      } else if (\n        Math.abs(deltaY) > Math.abs(deltaX) &&\n        [\"up\", \"down\"].includes(this.options.direction!)\n      ) {\n        e.preventDefault();\n      }\n    };\n\n    // Add non-passive touch move listener only when needed\n    if ([\"left\", \"right\", \"up\", \"down\"].includes(this.options.direction!)) {\n      this.wrapper.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: false,\n      });\n    } else {\n      this.wrapper.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: true,\n      });\n    }\n  }\n\n  private setupVisibilityEvents(): void {\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.hidden) {\n        this.handlers.pause();\n      } else {\n        this.handlers.resume();\n      }\n    });\n  }\n\n  public destroy(): void {\n    if (this.options.pauseOnHover) {\n      this.wrapper.removeEventListener(\"mouseenter\", this.handlers.pause);\n      this.wrapper.removeEventListener(\"mouseleave\", this.handlers.resume);\n    }\n\n    this.wrapper.removeEventListener(\"touchstart\", this.handlers.pause);\n    this.wrapper.removeEventListener(\"touchend\", this.handlers.resume);\n    document.removeEventListener(\"visibilitychange\", this.handlers.pause);\n  }\n}\n","import type { CloneMetrics } from \"../../types\";\n\nexport class CloneCalculator {\n  private cachedMetrics: CloneMetrics | null = null;\n\n  constructor(private direction: \"left\" | \"right\" | \"up\" | \"down\") {}\n\n  public calculateOptimalCloneCount(\n    containerElement: HTMLElement,\n    contentElements: HTMLElement[],\n    gap: number\n  ): number {\n    const isHorizontal = [\"left\", \"right\"].includes(this.direction);\n\n    const metrics = this.calculateMetrics(containerElement, contentElements, gap, isHorizontal);\n\n    // If metrics are identical, return from cache\n    if (\n      this.cachedMetrics &&\n      this.cachedMetrics.containerSize === metrics.containerSize &&\n      this.cachedMetrics.contentSize === metrics.contentSize\n    ) {\n      return this.cachedMetrics.calculatedCount;\n    }\n\n    // Calculate minimum number of clones needed\n    // +1 to ensure continuous scrolling\n    const minClones = Math.ceil(metrics.containerSize / metrics.contentSize) + 1;\n\n    // Cache the new metrics\n    this.cachedMetrics = {\n      ...metrics,\n      calculatedCount: minClones,\n    };\n\n    return minClones;\n  }\n\n  private calculateMetrics(\n    container: HTMLElement,\n    elements: HTMLElement[],\n    gap: number,\n    isHorizontal: boolean\n  ): Omit<CloneMetrics, \"calculatedCount\"> {\n    const containerSize = isHorizontal ? container.offsetWidth : container.offsetHeight;\n\n    const contentSize = elements.reduce((total, el) => {\n      const size = isHorizontal ? el.offsetWidth : el.offsetHeight;\n      return total + size + gap;\n    }, 0);\n\n    return {\n      containerSize,\n      contentSize,\n    };\n  }\n\n  public invalidateCache(): void {\n    this.cachedMetrics = null;\n  }\n}\n","import type { MarqueeOptions, ElementMetrics } from \"../../types\";\nimport { CloneCalculator } from \"./CloneCalculator\";\n\nexport class DOMManager {\n  private container: HTMLElement;\n  private wrapper: HTMLElement;\n  private element: HTMLElement;\n  private options: Partial<MarqueeOptions>;\n  private contentElements: HTMLElement[] = [];\n  private clones: HTMLElement[] = [];\n  private instanceId: string;\n  private separatorStyleElement: HTMLStyleElement | null = null;\n  private cloneCalculator: CloneCalculator;\n\n  constructor(element: HTMLElement, options: Partial<MarqueeOptions>) {\n    this.instanceId = `marquee-${Math.random().toString(36).substring(2, 9)}`;\n    this.element = element;\n    this.options = options;\n    this.container = this.createContainer();\n    this.wrapper = this.createWrapper();\n    this.cloneCalculator = new CloneCalculator(options.direction!);\n\n    // Clear original element since everything goes through contentList\n    this.element.innerHTML = \"\";\n\n    this.setupDOM();\n  }\n\n  private createContainer(): HTMLElement {\n    const container = document.createElement(\"div\");\n    container.classList.add(this.instanceId, \"marquee-container\");\n    container.style.width = \"100%\";\n    container.style.overflow = \"hidden\";\n    container.style.position = \"relative\";\n    return container;\n  }\n\n  private createWrapper(): HTMLElement {\n    const wrapper = document.createElement(\"div\");\n    wrapper.style.position = \"relative\";\n    wrapper.style.width = \"100%\";\n    wrapper.style.height = \"100%\";\n    wrapper.style.overflow = \"visible\";\n    wrapper.classList.add(\"marquee-wrapper\");\n    return wrapper;\n  }\n\n  public setupDOM(): void {\n    const originalHeight = this.getMaxContentHeight();\n\n    // Configure container height\n    if ([\"up\", \"down\"].includes(this.options.direction!) && this.options.containerHeight) {\n      this.container.style.height = `${this.options.containerHeight}px`;\n    } else {\n      this.container.style.height = `${originalHeight}px`;\n    }\n\n    // Insert into DOM\n    this.element.parentNode?.insertBefore(this.container, this.element);\n    this.container.appendChild(this.wrapper);\n\n    // Create content elements from contentList\n    this.createContentElements();\n  }\n\n  public createContentElements(): void {\n    // Clear existing elements\n    this.clearElements();\n\n    const fragment = document.createDocumentFragment();\n    this.options.contentList!.forEach((content) => {\n      const element = this.createContentElement(content);\n      this.contentElements.push(element);\n      fragment.appendChild(element);\n    });\n\n    this.wrapper.appendChild(fragment);\n    this.positionElements();\n    this.createClones();\n\n    // Add separator styles after creating elements\n    this.updateSeparatorStyles();\n  }\n\n  private clearElements(): void {\n    this.contentElements.forEach((el) => el.remove());\n    this.clones.forEach((el) => el.remove());\n    this.contentElements = [];\n    this.clones = [];\n  }\n\n  private getMaxContentHeight(): number {\n    const temp = document.createElement(\"div\");\n    temp.style.position = \"absolute\";\n    temp.style.visibility = \"hidden\";\n    temp.style.left = \"-9999px\";\n    document.body.appendChild(temp);\n\n    const heights = this.options.contentList!.map((content) => {\n      temp.innerHTML = content;\n      return temp.offsetHeight;\n    });\n\n    document.body.removeChild(temp);\n    return Math.max(...heights, 0);\n  }\n\n  private calculateMetrics(): ElementMetrics[] {\n    const isHorizontal = [\"left\", \"right\"].includes(this.options.direction!);\n    const metrics: ElementMetrics[] = [];\n    let currentPosition = 0;\n\n    this.contentElements.forEach((el, index) => {\n      const rect = el.getBoundingClientRect();\n      const size = isHorizontal ? rect.width : rect.height;\n      const separatorOffset =\n        this.options.separator && index < this.contentElements.length - 1\n          ? this.options.gap! / 2\n          : 0;\n\n      metrics.push({\n        size,\n        spacing: this.options.gap!,\n        position: currentPosition,\n        separatorOffset,\n      });\n\n      currentPosition += size + this.options.gap!;\n    });\n\n    return metrics;\n  }\n\n  private createContentElement(content: string): HTMLElement {\n    const element = document.createElement(\"div\");\n    element.className = \"marquee-content-item\";\n    element.style.position = \"absolute\";\n    element.style.whiteSpace = [\"up\", \"down\"].includes(this.options.direction!)\n      ? \"normal\"\n      : \"nowrap\";\n    element.innerHTML = content;\n    return element;\n  }\n\n  private positionElements(): void {\n    const metrics = this.calculateMetrics();\n    this.contentElements.forEach((el, i) => {\n      const { position } = metrics[i];\n      el.style.transform = [\"left\", \"right\"].includes(this.options.direction!)\n        ? `translate3d(${position}px, 0, 0)`\n        : `translate3d(0, ${position}px, 0)`;\n    });\n  }\n\n  private createClones(): void {\n    // If cloneCount is 'auto', use CloneCalculator\n    const cloneCount =\n      this.options.cloneCount === \"auto\"\n        ? this.cloneCalculator.calculateOptimalCloneCount(\n            this.container,\n            this.contentElements,\n            this.options.gap!\n          )\n        : this.options.cloneCount!;\n\n    if (cloneCount! <= 0) return;\n\n    const metrics = this.calculateMetrics();\n    const totalSize = metrics.reduce((sum, m) => sum + m.size + m.spacing, 0);\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < cloneCount; i++) {\n      const offset = totalSize * (i + 1);\n      this.contentElements.forEach((original, index) => {\n        const clone = original.cloneNode(true) as HTMLElement;\n        clone.setAttribute(\"aria-hidden\", \"true\");\n        clone.style.transform = [\"left\", \"right\"].includes(this.options.direction!)\n          ? `translate3d(${metrics[index].position + offset}px, 0, 0)`\n          : `translate3d(0, ${metrics[index].position + offset}px, 0)`;\n\n        this.clones.push(clone);\n        fragment.appendChild(clone);\n      });\n    }\n\n    this.wrapper.appendChild(fragment);\n  }\n\n  private updateSeparatorStyles(): void {\n    this.separatorStyleElement?.remove();\n\n    if (!this.options.separator || [\"up\", \"down\"].includes(this.options.direction!)) {\n      return;\n    }\n\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      .${this.instanceId} .marquee-content-item::before {\n      content: '${this.options.separator}';\n      position: absolute;\n      left: -${this.options.gap! / 2}px;\n      transform: translate3d(-50%, 0, 0);\n      white-space: pre;\n      }\n    `;\n\n    document.head.appendChild(style);\n    this.separatorStyleElement = style;\n  }\n\n  private cleanupSeparatorStyles(): void {\n    this.separatorStyleElement?.remove();\n    this.separatorStyleElement = null;\n  }\n\n  public updateContent(newContent: string[]): void {\n    this.options.contentList = newContent;\n    this.cloneCalculator.invalidateCache();\n    this.createContentElements();\n  }\n\n  // Utility method to force recalculation of clones\n  public recalculateClones(): void {\n    this.cloneCalculator.invalidateCache();\n    this.createContentElements();\n  }\n\n  public updateContainerHeight(height: number): void {\n    if (this.container) {\n      this.container.style.height = `${height}px`;\n    }\n  }\n\n  public updateSeparators(): void {\n    this.updateSeparatorStyles();\n  }\n\n  public getWrapper(): HTMLElement {\n    return this.wrapper;\n  }\n\n  public getContainer(): HTMLElement {\n    return this.container;\n  }\n\n  public getContentElements(): HTMLElement[] {\n    return this.contentElements;\n  }\n\n  public destroy(): void {\n    this.clearElements();\n    if (this.wrapper.parentNode) {\n      this.wrapper.parentNode.insertBefore(this.element, this.wrapper);\n      this.container.remove();\n    }\n    this.cleanupSeparatorStyles();\n    document.querySelector(`.${this.instanceId}`)?.remove();\n  }\n}\n","import type { MarqueeOptions } from \"../types\";\nimport { OptionsValidator } from \"./OptionsValidator\";\nimport { AnimationManager } from \"./managers/AnimationManager\";\nimport { EventManager } from \"./managers/EventManager\";\nimport { DOMManager } from \"./managers/DOMManager\";\n\nexport class Marquee {\n  private element!: HTMLElement;\n  private originalElement: HTMLElement;\n  private options!: Partial<MarqueeOptions>;\n  private isPlaying: boolean = false;\n  private animationManager: AnimationManager | null = null;\n  private eventManager: EventManager | null = null;\n  private domManager: DOMManager | null = null;\n  private htmlContentList: string[] = [];\n\n  private defaultOptions: Partial<MarqueeOptions> = {\n    speed: 100,\n    direction: \"left\",\n    pauseOnHover: false,\n    gap: 20,\n    cloneCount: \"auto\",\n    separator: \"\",\n    randomize: false,\n    contentList: [],\n  };\n\n  constructor(selector: string | HTMLElement, options: MarqueeOptions = {}) {\n    const element = typeof selector === \"string\" ? document.querySelector(selector) : selector;\n\n    if (!element) {\n      throw new Error(\"Invalid element selector\");\n    }\n\n    // Store a deep copy of the original element\n    this.originalElement = element.cloneNode(true) as HTMLElement;\n    this.setupInstance(element as HTMLElement, options);\n    this.init();\n  }\n\n  private setupInstance(element: HTMLElement, options: MarqueeOptions): void {\n    const validatedOptions = OptionsValidator.validate(options);\n    this.element = element;\n    this.options = { ...this.defaultOptions, ...validatedOptions };\n    this.htmlContentList = Array.from(this.element.children).map((child) => child.outerHTML);\n\n    // If contentList is empty, populate it with the direct children of the marquee element\n    if (!this.options.contentList?.length) {\n      this.options.contentList = this.htmlContentList;\n    } else if (this.htmlContentList.length && this.options.keepOriginalContent) {\n      // If contentList is not empty, but the original content should be kept, append it to the contentList\n      this.options.contentList = [...this.htmlContentList, ...this.options.contentList];\n    }\n\n    // Randomize contentList if required\n    if (this.options.randomize) {\n      this.options.contentList = this.randomizeContent();\n    }\n  }\n\n  private async init(): Promise<void> {\n    // Cleanup existing managers if they exist\n    this.destroy();\n\n    this.domManager = new DOMManager(this.element, this.options);\n    await this.domManager.createContentElements();\n\n    const wrapper = this.domManager.getWrapper();\n    const contentElements = this.domManager.getContentElements();\n\n    if (wrapper && contentElements.length > 0) {\n      this.animationManager = new AnimationManager(wrapper, this.options);\n      this.eventManager = new EventManager(this.element, wrapper, this.options, {\n        pause: () => this.pause(),\n        resume: () => this.play(),\n      });\n      this.play();\n    }\n  }\n\n  private randomizeContent(): string[] {\n    const shuffledContent = [...this.options.contentList!];\n    for (let i = shuffledContent.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledContent[i], shuffledContent[j]] = [shuffledContent[j], shuffledContent[i]];\n    }\n    return shuffledContent;\n  }\n\n  public async reset(): Promise<void> {\n    return new Promise<void>(async (resolve) => {\n      // Stop current animation\n      this.pause();\n\n      // Recreate element from original\n      const newElement = this.originalElement.cloneNode(true) as HTMLElement;\n\n      // Replace old element with new one\n      if (this.element.parentElement) {\n        this.element.parentElement.replaceChild(newElement, this.element);\n      }\n\n      // Wait for cleanup to complete\n      await Promise.resolve(this.destroy());\n\n      // Completely reset the instance\n      this.setupInstance(newElement, this.options);\n\n      // Wait for initialization to complete\n      await this.init();\n\n      resolve();\n    });\n  }\n\n  public destroy(): Promise<void> {\n    return new Promise<void>((resolve) => {\n      this.pause();\n      this.animationManager?.stopAnimation();\n      this.eventManager?.destroy();\n      this.domManager?.destroy();\n\n      // S'assurer que le DOM a eu le temps de se mettre à jour\n      requestAnimationFrame(() => {\n        resolve();\n      });\n    });\n  }\n\n  public play(): void {\n    if (this.isPlaying) return;\n    this.isPlaying = true;\n    this.startAnimation();\n  }\n\n  public pause(): void {\n    if (!this.isPlaying) return;\n    this.isPlaying = false;\n    this.stopAnimation();\n  }\n\n  private startAnimation(): void {\n    this.animationManager?.startAnimation();\n  }\n\n  private stopAnimation(): void {\n    this.animationManager?.stopAnimation();\n  }\n\n  public async updateContent(content: string | string[]): Promise<void> {\n    const newContent = Array.isArray(content) ? content : [content];\n\n    // Validate new content\n    const validationResult = OptionsValidator.validateContentList(newContent, this.options);\n    if (!validationResult.isValid) {\n      console.warn(\n        \"MarqueeJS: Content validation failed:\",\n        validationResult.errors.map((e) => e.message).join(\", \")\n      );\n      return;\n    }\n\n    this.pause();\n    this.options.contentList = newContent;\n    this.domManager?.createContentElements();\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public async addContent(\n    content: string | string[],\n    addToStart: boolean = false,\n    callback?: () => void\n  ): Promise<void> {\n    if (!content) return;\n    this.pause();\n\n    // Convert content to array if it's a string\n    const newContent = Array.isArray(content) ? content : [content];\n\n    // Validate new content\n    const validationResult = OptionsValidator.validateContentList(newContent, this.options);\n    if (!validationResult.isValid) {\n      console.warn(\n        \"MarqueeJS: Content validation failed:\",\n        validationResult.errors.map((e) => e.message).join(\", \")\n      );\n      return;\n    }\n\n    // Add new content to the contentList\n    if (addToStart) {\n      this.options.contentList = [...newContent, ...this.options.contentList!];\n    } else {\n      this.options.contentList = [...this.options.contentList!, ...newContent];\n    }\n\n    // Wait for reset to complete\n    await this.reset();\n\n    if (callback) {\n      requestAnimationFrame(() => {\n        callback();\n      });\n    }\n  }\n\n  public replaceContent(newContentList: string[], callback?: () => void): void {\n    if (!Array.isArray(newContentList)) return;\n\n    // Validate new content list\n    const validationResult = OptionsValidator.validateContentList(newContentList, this.options);\n    if (!validationResult.isValid) {\n      console.warn(\n        \"MarqueeJS: Content validation failed:\",\n        validationResult.errors.map((e) => e.message).join(\", \")\n      );\n      return;\n    }\n\n    // Replace the contentList with the new one\n    this.options.contentList = newContentList;\n\n    // Recreate content elements\n    this.domManager?.createContentElements();\n\n    // Recalculate positions and restart animation\n    this.animationManager?.recalculatePositions();\n\n    if (callback) {\n      requestAnimationFrame(() => {\n        callback();\n      });\n    }\n  }\n\n  public getContentList(): string[] {\n    return this.options.contentList!;\n  }\n\n  public updateSpeed(speed: number): void {\n    OptionsValidator.validateSpeed(speed);\n    this.options.speed = speed;\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public updateGap(gap: number): void {\n    OptionsValidator.validateGap(gap);\n    this.options.gap = gap;\n    this.domManager?.createContentElements();\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public updateSeparator(separator: string): void {\n    this.options.separator = separator;\n    this.domManager?.createContentElements();\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public updateCloneCount(cloneCount: number): void {\n    if (\n      !Number.isInteger(cloneCount) ||\n      cloneCount < 0 ||\n      cloneCount > OptionsValidator.MAX_CLONES\n    ) {\n      throw new Error(\n        `MarqueeJS: cloneCount must be an integer between 0 and ${OptionsValidator.MAX_CLONES}`\n      );\n    }\n    this.options.cloneCount = cloneCount;\n    this.domManager?.createContentElements();\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public updateContainerHeight(containerHeight: number): void {\n    OptionsValidator.validateContainerHeight(containerHeight, this.options.direction);\n    this.options.containerHeight = containerHeight;\n\n    // Apply forced height for 'up' and 'down' directions\n    if ([\"up\", \"down\"].includes(this.options.direction!)) {\n      this.domManager?.updateContainerHeight(containerHeight);\n    }\n\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public updatePauseOnHover(pauseOnHover: boolean): void {\n    this.options.pauseOnHover = pauseOnHover;\n    this.eventManager?.destroy();\n    this.eventManager = new EventManager(\n      this.element,\n      this.domManager?.getWrapper()!,\n      this.options,\n      {\n        pause: () => this.pause(),\n        resume: () => this.play(),\n      }\n    );\n  }\n\n  public recalculatePositions(): void {\n    this.animationManager?.recalculatePositions();\n    this.play();\n  }\n\n  public randomize(): void {\n    this.options.randomize = true;\n    this.reset();\n  }\n}\n","import { Marquee } from \"./core/Marquee\";\nimport type { MarqueeOptions, MarqueeInstance } from \"./types\";\n\nexport function marqueejs(selector: string, options: MarqueeOptions = {}): MarqueeInstance {\n  const instance = new Marquee(selector, options);\n\n  return {\n    start() {\n      instance.play();\n    },\n    stop() {\n      instance.pause();\n    },\n    pause() {\n      instance.pause();\n    },\n    resume() {\n      instance.play();\n    },\n    destroy() {\n      instance.destroy();\n    },\n    addContent(content: string | string[], addToStart: boolean = false, callback?: () => void) {\n      instance.addContent(content, addToStart, callback);\n    },\n    replaceContent(newContentList: string[], callback?: () => void) {\n      instance.replaceContent(newContentList, callback);\n    },\n    getContentList() {\n      return instance.getContentList();\n    },\n    updateSpeed(speed: number) {\n      instance.updateSpeed(speed);\n    },\n    updateGap(gap: number) {\n      instance.updateGap(gap);\n    },\n    updateSeparator(separator: string) {\n      instance.updateSeparator(separator);\n    },\n    updateCloneCount(cloneCount: number) {\n      instance.updateCloneCount(cloneCount);\n    },\n    updateContainerHeight(containerHeight: number) {\n      instance.updateContainerHeight(containerHeight);\n    },\n    updatePauseOnHover(pauseOnHover: boolean) {\n      instance.updatePauseOnHover(pauseOnHover);\n    },\n    recalculatePositions() {\n      instance.recalculatePositions();\n    },\n    randomize() {\n      instance.randomize();\n    },\n  };\n}\n\nexport type { MarqueeOptions, MarqueeInstance };\n"],"names":["_OptionsValidator","options","validationResult","e","_","index","contentList","_a","_b","_c","errors","validationOptions","forbiddenTagsPattern","forbiddenAttrsPattern","attr","i","content","speed","direction","validDirections","gap","containerHeight","keepOriginalContent","cloneCount","__publicField","OptionsValidator","AnimationManager","wrapper","groups","isHorizontal","currentPosition","group","size","position","animate","currentTime","deltaTime","movement","item","newPosition","currentElement","threshold","el","elementWidth","elementHeight","containerWidth","EventManager","_element","handlers","touchStartX","touchStartY","handleTouchMove","deltaX","deltaY","CloneCalculator","containerElement","contentElements","metrics","minClones","container","elements","containerSize","contentSize","total","DOMManager","element","originalHeight","fragment","temp","heights","rect","separatorOffset","totalSize","sum","m","offset","original","clone","style","newContent","height","Marquee","selector","validatedOptions","child","shuffledContent","j","resolve","newElement","addToStart","callback","newContentList","separator","pauseOnHover","marqueejs","instance"],"mappings":"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"}